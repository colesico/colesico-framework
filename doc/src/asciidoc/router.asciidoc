= Router module

Framework router module is used for dispatching the HTTP requests to the corresponding handlers - methods of the
controller classes (implemented by weblet,restlet, etc).

== Default routes

Route is a part of  HTTP request URL  - directory path.
By default framework maps HTTP request to its handlers based on controller class simple name and its methods.
Router concatenates class simple name with method name and converts camel case notation to snake case.

There are special cases:

* Controller classes names started with "Index" is associated with local root route '/' (the root of package route)
  This is an analouge of @Route("./") definition (see below)
* Method name "index" is associated with local root route '/' (the root of controller route).
  This is an analouge of @Route("./") definition
* Method  name "other" is associated with any nested routes (begins after controller route)
  This is an analouge of @Route("*") definition

== Custom routes

To customize  routes construction use @Route annotation.

This annotation can be used on:

* Package (package-info)
* Controller class  (implemented by weblet,restlet, etc)
* Request handler method

Summary route in general is building by concatenation of package level + class level + method level routes.

Package based rout should always be an absolute path ans starts with '/'.

Controller and method based routes can be absolute or relative. Absolute route starts with '/'
The route relative to the package route is specified without a leading '/' or begins with a dot-slash './'

The relative path is added to the parent path. The relative path for the handler method  is added to the path specified
for the controller class. And further, respectively, to the path for the package.

For example - package level route (package-info.java):

[source,java]
----
@Route("/api/v1.0")
package my.app.restapi;
----

Class level and method level:
[source,java]
----
@Weblet
@Route("user-service")
public class UseRestlet {

    // Summary URL: http://localhost:8080/api/v1.0/user-service/user?id=1
    @Route("user")
    public User getUser(Long id) {
        return ...;
    }
}
----

== HTTP request method

To specify HTTP request method RequestMethod use @RequestMethod annotation on controller request  handler method

== Example

See full http routing example in the framework source code section #examples/route-example#

